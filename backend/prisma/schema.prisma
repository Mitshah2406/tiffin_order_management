// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Timing {
  MORNING
  AFTERNOON
  EVENING
  NIGHT
}

model Customer {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  mobileNumber String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Transaction  Transaction[]
}

model Product {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  Customizations Customizations[]
  Item           Item[]
}

model Customizations {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  description String
  price       Float
  productId   String   @db.ObjectId
  product     Product? @relation(fields: [productId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Transaction {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  transactionTime Timing
  transactionDate DateTime  @default(now())
  customerId      String    @db.ObjectId
  customer        Customer? @relation(fields: [customerId], references: [id])
  Item            Item[]
}

model Item {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  productId     String       @db.ObjectId
  product       Product?     @relation(fields: [productId], references: [id])
  quantity      Int
  transactionId String       @db.ObjectId
  transaction   Transaction? @relation(fields: [transactionId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}
